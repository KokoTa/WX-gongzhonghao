<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>语音搜电影</title>
  <script src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
  <script src="https://cdn.bootcss.com/axios/0.18.0/axios.min.js"></script>
  <script src="https://cdn.bootcss.com/fetch-jsonp/1.1.3/fetch-jsonp.min.js"></script>
  script.
    /**
    * Callback index.
    */
    let count = 0;
    /**
    * Noop function.
    */
    function noop(){}
    /**
    * JSONP handler
    *
    * Options:
    *  - param {String} qs parameter (`callback`)
    *  - prefix {String} qs parameter (`__jp`)
    *  - name {String} qs parameter (`prefix` + incr)
    *  - timeout {Number} how long after a timeout error is emitted (`60000`)
    *
    * @param {String} url
    * @param {Object|Function} optional options / callback
    * @param {Function} optional callback
    */
    function jsonp(url, opts, fn){
      if ('function' == typeof opts) {
        fn = opts;
        opts = {};
      }
      if (!opts) opts = {};

      var prefix = opts.prefix || '__jp';

      // use the callback name that was passed if one was provided.
      // otherwise generate a unique name by incrementing our counter.
      var id = opts.name || (prefix + (count++));

      var param = opts.param || 'callback';
      var timeout = null != opts.timeout ? opts.timeout : 60000;
      var enc = encodeURIComponent;
      var target = document.getElementsByTagName('script')[0] || document.head;
      var script;
      var timer;


      if (timeout) {
        timer = setTimeout(function(){
          cleanup();
          if (fn) fn(new Error('Timeout'));
        }, timeout);
      }

      function cleanup(){
        if (script.parentNode) script.parentNode.removeChild(script);
        window[id] = noop;
        if (timer) clearTimeout(timer);
      }

      function cancel(){
        if (window[id]) {
          cleanup();
        }
      }

      window[id] = function(data){
        cleanup();
        if (fn) fn(null, data);
      };

      // add qs component
      url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);
      url = url.replace('?&', '?');

      // create script
      script = document.createElement('script');
      script.src = url;
      target.parentNode.insertBefore(script, target);

      return cancel;
    }
</head>
<body>
  button.record 点击我开始录音
  p
    span 导演：
    i.director 暂无
  p
    span 年份：
    i.year 暂无
  p
    span 封面：
    img.poster(src="#" alt="暂无")
  
  script.
    alert(location.href);
    axios.get('http://rg658s.natappfree.cc/sign').then((res) => {
      // 进行验证
      wx.config({
          debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
          appId: 'wx475c09b524a46560', // 必填，公众号的唯一标识
          timestamp: res.data.timestamp, // 必填，生成签名的时间戳
          nonceStr: res.data.nonceStr, // 必填，生成签名的随机串
          signature: res.data.signature,// 必填，签名
          jsApiList: [
            'startRecord',
            'stopRecord',
            'onVoiceRecordEnd',
            'translateVoice',
            'onMenuShareAppMessage',
            'onMenuShareTimeline',
            'onMenuShareQQ',
            'onMenuShareWeibo',
            'onMenuShareQZone'
          ] // 必填，需要使用的JS接口列表
      });

      // 验证成功后
      wx.ready(function(){
        //- // 检查接口
        //- wx.checkJsApi({
        //-     jsApiList: [ 'startRecord', 'stopRecord', 'onVoiceRecordEnd', 'translateVoice', 'onMenuShareAppMessage' ], // 需要检测的JS接口列表，所有JS接口列表见附录2,
        //-     success: function(res) {
        //-       const obj = JSON.parse(res.checkResult);
        //-       for (key in obj) {
        //-         if (!obj[key]) {
        //-           console.log(`${key}接口无法使用`);
        //-         } else {
        //-           console.log(`${key}接口可以使用`);
        //-         }
        //-       }
        //-     // 以键值对的形式返回，可用的api值true，不可用为false
        //-     // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
        //-     }
        //- });

        
        const button = document.querySelector('.record');
        const director = document.querySelector('.director');
        const year = document.querySelector('.year');
        const poster = document.querySelector('.poster');
        let imgObj = { // 图片预览对象
          current: '', // 当前显示图片的http链接
          urls: [] // 需要预览的图片http链接列表
        }
        // 阻止长按弹出菜单
        button.addEventListener('contextmenu', function(e){
          e.preventDefault();
        });
        // 按下时进行录音
        button.addEventListener('touchstart', (e) => {
          wx.startRecord({
            fail() {
              alert('录音失败')
            },
            cancel() {
              alert('录音取消');
            }
          });
        });
        // 松开时停止录音并识别
        button.addEventListener('touchend', (e) => {
          wx.stopRecord({
            success(res) {
              const localId = res.localId;
              // 识别音频
              wx.translateVoice({
                localId, // 需要识别的音频的本地Id，由录音相关接口获得
                isShowProgressTips: 1, // 默认为1，显示进度提示
                success: function (res) {
                  const result = res.translateResult;
                  alert(`搜索名：${result}`);
                  jsonp(`https://api.douban.com/v2/movie/search?q=${result}`, null, (err, data) => {
                    const movie = data.subjects[0];

                    const obj = {
                      director: movie.directors[0].name,
                      year: movie.year,
                      poster: movie.images.medium
                    };

                    director.innerHTML = obj.director;
                    year.innerHTML = obj.year;
                    poster.src = obj.poster;

                    // 分享给朋友(搜索完成后的格式)
                    wx.onMenuShareAppMessage({
                      title: movie.title, // 分享标题
                      desc: `导演：${obj.director}\n上映年份：${obj.year}`, // 分享描述
                      link: 'http://rg658s.natappfree.cc/index', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                      imgUrl: obj.poster, // 分享图标
                      success() {
                        // 用户点击了分享后执行的回调函数
                        alert('分享成功');
                      },
                      cancel() {
                        alert('分享失败');
                      }
                    });

                    // 更新图片预览内容
                    imgObj = {
                      current: obj.poster,
                      urls: data.subjects.map((item) => item.images.medium)
                    };
                  });
                }
              });
            }
          })
        })

        // 分享给朋友(默认格式)
        wx.onMenuShareAppMessage({
          title: '默认分享标题', // 分享标题
          desc: '默认分享描述', // 分享描述
          link: 'http://rg658s.natappfree.cc/index', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
          imgUrl: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1531385596239&di=95d8c278e1d1d25f6de28c91ada648dc&imgtype=0&src=http%3A%2F%2Fimg.sccnn.com%2Fbimg%2F338%2F24556.jpg', // 分享图标
          success() {
            // 用户点击了分享后执行的回调函数
            alert('分享成功');
          },
          cancel() {
            alert('分享失败');
          }
        });


        poster.addEventListener('click', (e) => {
          // 图片预览
          wx.previewImage(imgObj);
        });
      });
    });
</body>
</html>